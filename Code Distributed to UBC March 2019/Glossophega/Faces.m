function [F] = Faces()
% This function returns an array filled in by the user. Every row of the array
% contains the vertices of a face. 


    % assign number values stored as the names of the points so that they can
    % be easily referenced as column indexes in the 3xW Bat array

    [Le01L, Le01R, Le02L, Le02R, Le03L, Le03R, Mf01L, Mf01R, Mf02L, Mf02R, Mf03L, Mf03R, ...
    Mi01L, Mi01R, Mi02L, Mi02R, Mi03L, Mi03R, Mi04L, Mi04R, Mi05L, Mi05R, Mi06L, Mi06R, Mi07L, Mi07R, ...
    Mi08L, Mi08R, Mi09L, Mi09R, Mm01L, Mm01R, Mm02L, Mm02R, Mm03L, Mm03R, Mo01L, Mo01R, Mo02L, Mo02R, ...
    Mo03L, Mo03R, shdL, shdR, elbL, elbR, wstL, wstR, t3L, t3R, t4L, t4R, t5L, t5R, mcp3L, mcp3R, ...
    mcp4L, mcp4R, mcp5L, mcp5R, ip3L, ip3R, ip4L, ip4R, ip5L, ip5R, hipL, hipR, kneeL, kneeR, ...
    ankL, ankR, lmb, str, Sj18L, Sj18R, Sj19L, Sj19R, Sj20L, Sj20R, Sj21L, Sj21R, Te01L, Te01R, ...
    Te02L, Te02R, Te03L, Te03R, Te04L, Te04R, Te05L, Te05R, Te06L, Te06R, Te07L, Te07R, Te08L, Te08R, ...
    Te09L, Te09R, Sn01L, Sn01R, Sn02L, Sn02R, Sn03L, Sn03R, Sn04L, Sn04R, Sn05L, Sn05R, Sn06L, Sn06R] ...
    = Points2Numbers();
    
    % if one face has more vertices than the others then the rows need to have
    % NaN's to make up for the missig vertices. Each row has to have the
    % same number of entries.
    % 
   
    
    F =  [lmb,str,shdR; ...
          lmb,shdR,hipR; ...
          shdR,hipR,Mi01R; ...
          shdR,elbR,Mi01R; ...
          elbR,Mi01R,Mi06R; ...
          elbR,Mi06R,Mi07R; ...
          elbR,wstR,Mi07R; ... 
          wstR,mcp5R,Mi07R; ...
          shdR,elbR,Le01R; ...
          elbR,Le01R,Le02R; ...
          elbR,Le02R,Le03R; ...
          elbR,wstR,Le03R; ...
          hipR,Mi01R,Mi02R; ...
          hipR,kneeR,Mi02R; ...
          kneeR,Mi02R,Mi03R; ...
          kneeR,ankR,Mi03R; ...
          ankR,Te01R,Mi03R; ...
          Te01R,Mi03R,Mi04R; ...
          Te01R,Te02R,Mi04R; ...
          Mi03R,Mi04R,Mi05R; ... 
          Mi02R,Mi03R,Mi05R; ...
          Mi02R,Mi05R,Mi06R; ...
          Mi01R,Mi02R,Mi06R; ...
          Mi05R,Mi06R,Mi07R; ...
          Mi05R,Mi07R,Mi08R; ...
          Mi04R,Mi05R,Mi08R; ...
          Mi04R,Mi08R,Mi09R; ...
          Te02R,Mi04R,Mi09R; ...
          Te02R,Te03R,Mi09R; ...
          Te03R,t5R,ip5R; ...
          Te03R,ip5R,Mi09R; ...
          Mi09R,ip5R,mcp5R; ...
          Mi09R,Mi08R,mcp5R; ...
          Mi07R,Mi08R,mcp5R; ...
          wstR,mcp5R,Mm01R; ...
          wstR,mcp4R,Mm01R; ...
          mcp5R,Mm01R,Mm02R; ...
          Mm02R,mcp5R,ip5R; ...
          Mm02R,ip5R,Te04R; ...
          t5R,ip5R,Te04R; ...
          Te04R,Te05R,Mm02R; ...
          Mm02R,Mm03R,Te05R; ...
          Mm01R,Mm02R,Mm03R; ...
          Mm01R,Mm03R,mcp4R; ...
          mcp4R,ip4R,Mm03R; ...
          Te05R,Te06R,Mm03R; ...
          Te06R,ip4R,Mm03R; ...
          Te06R,ip4R,t4R; ...
          wstR,mcp4R,Mo01R; ...
          wstR,mcp3R,Mo01R; ...
          mcp4R,Mo01R,Mo02R; ...
          Mo02R,mcp4R,ip4R; ...
          Mo02R,ip4R,Te07R; ...
          t4R,ip4R,Te07R; ...
          Te07R,Te08R,Mo02R; ...
          Mo02R,Mo03R,Te08R; ...
          Mo01R,Mo02R,Mo03R; ...
          Mo01R,Mo03R,mcp4R; ...
          mcp3R,ip3R,Mo03R; ...
          mcp3R,Mo01R,Mo03R; ...
          Te08R,Te09R,Mo03R; ...
          Te09R,ip3R,Mo03R; ...
          Te09R,ip3R,t3R; ...
         ];
      
end

